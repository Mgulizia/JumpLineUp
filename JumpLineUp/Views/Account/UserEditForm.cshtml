@using System.Net.Mime
@using AutoMapper.Internal
@using System.Text.RegularExpressions
@using JumpLineUp.Helpers
@using Microsoft.Ajax.Utilities
@using Roles = JumpLineUp.Helpers.RoleHelper
@model JumpLineUp.ViewModels.Accounts.UserEditViewModel
@{
    ViewBag.Title = "Register";
    var title = (Model.ApplicationUser.UserName.IsNullOrWhiteSpace()) ? "Create New User" : "Edit User";
    var buttonTxt = (Model.ApplicationUser.UserName.IsNullOrWhiteSpace()) ? "Add User" : "Update User";
}

<br />
@using (Html.BeginForm("Update", "Account"))
{

    <div class="panel panel-default">

        <div class="panel-heading">

            <h2>@title</h2>

        </div><!--Panel Heading End-->

        <div class="panel-body">
        
            <div class="form-group">
                @Html.LabelFor(m => m.ApplicationUser.FirstName)
                @Html.TextBoxFor(m => m.ApplicationUser.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ApplicationUser.FirstName)
            </div>
        
            <div class="form-group">
                @Html.LabelFor(m => m.ApplicationUser.LastName)
                @Html.TextBoxFor(m => m.ApplicationUser.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ApplicationUser.LastName)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ApplicationUser.Email)
                @Html.TextBoxFor(m => m.ApplicationUser.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ApplicationUser.Email)
            </div>

            <hr />

            <div class="form-group">
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword)
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

            <hr />

            <div class="form-group">
                @Html.LabelFor(m => m.ApplicationUser.CellNumber)
                @Html.TextBoxFor(m => m.ApplicationUser.CellNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ApplicationUser.CellNumber)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ApplicationUser.CellularCarriersId)
                @Html.DropDownListFor(m => m.ApplicationUser.CellularCarriersId, new SelectList(Model.CellularCarriers, "Id", "CarrierName"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ApplicationUser.CellularCarriersId)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ApplicationUser.BlcsOfficeId)
                @Html.DropDownListFor(m => m.ApplicationUser.BlcsOfficeId, new SelectList(Model.BlcsOffices, "Id", "LocationDescription"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ApplicationUser.BlcsOfficeId)
            </div>

            <div class="well">

                <h4>User Permissions</h4>

                @for (int i = 0; i < Model.Roles.Count; i++)
                {
                    <div class="checkbox">
                        @{
                            var hasRole = false;
                            if (!Model.ApplicationUser.Email.IsNullOrWhiteSpace())
                            {
                                hasRole = RoleHelper.HasRole(Model.ApplicationUser.Id, Model.Roles[i].Name);

                            }

                        }
                        <label>
                            @if (hasRole)
                            {
                                Model.Roles[i].IsChecked = true;

                                @Html.CheckBoxFor(m => m.Roles[i].IsChecked, new { @checked = "checked" }); @Model.Roles[i].Description
                            }
                            else
                            {
                                @Html.CheckBoxFor(m => m.Roles[i].IsChecked); @Model.Roles[i].Description
                            }



                            @Html.HiddenFor(m => m.Roles[i].Id)
                            @Html.HiddenFor(m => m.Roles[i].Name)
                        </label>
                    </div>

                            }
                <hr/>
                <h4>User Status</h4>
                <label>
                    @Html.CheckBoxFor(m => m.ApplicationUser.IsEnabled) Sign in Allowed
                </label>
                




            </div>
        </div><!--Panel Body End-->
        <div class="panel-footer">
            @Html.HiddenFor(m => m.ApplicationUser.Id)
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-primary">@buttonTxt</button>

        </div><!--Panel Footer End-->
    </div><!--Panel End-->
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

