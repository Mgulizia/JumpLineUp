@using JumpLineUp.Migrations
@using JumpLineUp.Models
@model JumpLineUp.ViewModels.SupportServices.SupportServicesViewModel
@{
    ViewBag.Title = "New Support Service";
}


<br/>   


<button class="btn btn-lg btn-danger btn-modal-open" >Do some shit, test some shit</button><br />
<form>
    <div class="panel panel-default">


        <div class="panel-heading">
            <h2>Create New Support Service</h2>
        </div><!-- End of Panel Header -->

        <div class="panel-body">

            <div class="container">
                <div class="row">

                    <div class="col-md-6">

                        <h4>Basic Case Information</h4>

                        <div class="form-group">
                            <label for="MasterCaseNumber">Master Case Number</label>
                            <input id="MasterCaseNumber" type="text" value="" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label for="AuthorizationNumber">Authorization Number: if available</label>
                            <input id="AuthorizationNumber" type="text" value="" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label for="ServiceAreaId">Service Area</label>
                            <select id="ServiceAreaId" type="text" value="" class="form-control">
                                <option value>-- Select Service Area --</option>
                                @foreach (var serviceArea in Model.ServiceAreas)
                                {
                                    <option value="@serviceArea.Id">@serviceArea.ServiceAreaAbbreviation</option>
                                }
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="ServiceTypeId">Service Type </label>
                            <select id="ServiceTypeId" type="text" value="" class="form-control">
                                <option value>-- Select Service Area --</option>
                                @foreach (var type in Model.ServiceTypes)
                                {
                                    <option value="@type.Id">@type.ServiceAbbrieviation - @type.ServiceName</option>
                                }
                            </select>
                        </div>

                    </div><!-- End of Col-Md-6 -->

                    <div class="col-md-6">
                        <h4>Service Timeline</h4>

                        <div class="form-group">
                            <label for="ServiceStart">Service Start Date</label>
                            <input id="ServiceStart" type="text" value="" class="form-control datepicker" />
                        </div>

                        <div class="form-group">
                            <label for="ServiceStop">Service End Date</label>
                            <input id="ServiceStop" type="text" value="" class="form-control datepicker" />
                        </div>


                    </div><!-- End of Col-Md-6 -->

                </div><!-- End of Row -->

                <hr />

                <div class="row">
                    <div class="col-md-6">
                        
                        <h4>Individuals Involved</h4>

                        <div class="form-group">
                            <label for="YouthId">Youth Involved</label>
                            <div class="tt-container">
                                <input id="YouthId" type="text" value="" class="form-control" />
                            </div>
                        </div>
                    
                        <ul id="youth" class="list-group typeahead-selectedbox">
                            
                        </ul>
                    
                    

                        <div class="form-group">
                            <label for="ClientIds">Clients Involved</label>
                            <div class="tt-container">
                                <input id="ClientIds" type="text" value="" class="form-control typeahead" />
                            </div>
                        </div>

                        <ul id="clients" class="list-group typeahead-selectedbox">
                            <li id="selected-client" class="list-group-item">&nbsp;</li>
                        </ul>
                    
                    
                    
                    

                        <div class="form-group">
                            <label for="CfsWorkerId">DHHS Case Worker</label>
                            <div class="tt-container">
                                <input id="CfsWorkerId" type="text" value="" class="form-control" />
                            </div>
                        </div>
                        
                        <ul id="cfsWorker" class="list-group typeahead-selectedbox">
                            <li id="selected-cfsWorker" class="list-group-item">&nbsp;</li>
                        </ul>
                        
                        
                        
                        


                    </div><!-- End of Col-Md-6 -->
                    <div class="col-md-6">
                        
                    </div><!-- End of Col-Md-6 -->
                </div><!-- End of Row -->





            </div><!-- End of Container -->





            

        </div><!-- End of Panel Body -->

        <div class="panel-footer">
            
            <button class="btn btn-primary"> Add New Service </button>

        </div><!-- End of Panel Footer -->
    </div><!-- End of Panel -->
</form>

@section scripts{
    
    <script>



        $(document).ready(function() {





//ADD YOUTH MODAL ----------------------------------------------------------------------------------------------------------------------
//Opens modal to insert a new youth to database, validates the data, and posts, returning the data.

            //Dto object, will be sent to Db
            var youthDto =
                {
                    FirstName: null,
                    LastName: null,
                    BirthDate: null,
                    YouthComment: null,
                    RestraintTypeId: 0,
                    IsEnabled: true
                }

            //Gets the restraints select ready
            @{
                var selectBoxForYouthRestraint = "";

                foreach (var restraint in Model.RestraintTypes)
                {
                    selectBoxForYouthRestraint = selectBoxForYouthRestraint + @"<option value = '"+ restraint.Id +"'>"+ restraint.RestraintName + "</option>";
                }
            }

            //Creates the modal form
            function youthBootBoxContent() {
                var formContent = "<form id='' class='bootBoxForm' action='POST'>" +

                    "<div class='form-group>" +
                    "<label for='youthFirstName'>First Name</label>" +
                    "<input type='text' id='youthFirstName' class='form-control' value='' />" +
                    "<span id='errYouthFirstName' class='field-validation-error'>&nbsp;</span>" +
                    "</div>" +

                    "<div class='form-group>" +
                    "<label for='youthLastName'>Last Name</label>" +
                    "<input type='text' id='youthLastName' class='form-control' value='' />" +
                    "<span id='errYouthLastName' class='field-validation-error'>&nbsp;</span>" +
                    "</div>" +

                    "<div class='form-group'>" +
                    "<label for='youthBirthDate'>Birth Date</label>" +
                    "<input type='text' id='youthBirthDate' class='form-control datepicker' value='' />" +
                    "<span id='errYouthBirthDate' class='field-validation-error'>&nbsp;</span>" +
                    "</div>" +

                    "<div class='form-group'>" +
                    "<label for='youthComment'>Optional Details about Youth</label>" +
                    "<textarea id='youthComment' rows='6' class='form-control' /><br/>" +
                    "</div>" +

                    "<div class='form-group'>" +
                    "<label for='restraintTypes'>Restraint Types Needed</label>" +
                    "<select class='form-control' id='restraintTypes'>" +
                    "<option value>--- Select Restraint Type ---</option>" +
                    "@Html.Raw(selectBoxForYouthRestraint)" +
                        "</select>" +
                        "<span id='errRestraintTypes' class='field-validation-error'>&nbsp;</span>" +
                        "</div>" +
                        "</form>";

                    //Adds the datepicker to the birthdate
                    var object = $("<div/>").html(formContent).contents();
                    object.find(".datepicker").datepicker({
                        format: 'mm-dd-yyyy',
                        autoclose: true,
                        changeMonth: true,
                        changeYear: true,
                        showButtonPanel: true,
                    }).on('changeDate',
                        function (ev) {
                            $(this).blur();
                            $(this).datepicker('hide');
                        });

                    return object;
                }

                //Logic for the modal.  on click -> open, on submit -> validate, on validated -> post and return ID of new youth
                $(".btn-modal-open").on("click", function () {
                    bootbox.dialog({
                        message: youthBootBoxContent,
                        title: "Add a Youth",
                        buttons: {
                            cancel: {
                                label: "Cancel",
                                className: "btn-default"
                            },
                            submit: {
                                label: "Add Youth",
                                className: "btn-primary",
                                callback: function (e) {
                                    e.preventDefault();
                                    var valid = true;

                                    if ($("#youthFirstName").val().trim()) {
                                        youthDto.FirstName = $("#youthFirstName").val();
                                        $("#errYouthFirstName").html("&nbsp;");
                                    } else {
                                        $("#errYouthFirstName").html("Youth's first name is required");
                                        valid = false;
                                    }

                                    if ($("#youthLastName").val().trim()) {
                                        youthDto.LastName = $("#youthLastName").val();
                                        $("#errYouthLastName").html("&nbsp;");
                                    } else {
                                        $("#errYouthLastName").html("Youth's last name is required");
                                        valid = false;
                                    }

                                    if ($("#youthBirthDate").val().trim()) {
                                        youthDto.BirthDate = $("#youthBirthDate").val();
                                        $("#errYouthBirthDate").html("&nbsp;");
                                    } else {
                                        $("#errYouthBirthDate").html("Youth's Birthdate is required");
                                        valid = false;
                                    }

                                    youthDto.YouthComment = $("#youthComment").val();

                                    if ($("#restraintTypes").val() !== "") {
                                        youthDto.RestraintTypeId = $("#restraintTypes").val();
                                        $("#errRestraintTypes").html("&nbsp;");
                                    } else {
                                        $("#errRestraintTypes").html("You must select a restraint type.");
                                        valid = false;
                                    }

                                    if (valid) {
                                        $.ajax({
                                            url: "/api/Youths",
                                            method: "post",
                                            data: youthDto
                                        })
                                            .done(function (result) {
                                                alert(result.id);
                                                toastr.success(youthDto.FirstName + " " + youthDto.LastName + " has been added to Lineup.");
                                            })
                                            .fail(function () {
                                                toastr.error("Youth was not created, Was there something missing? ");
                                            });
                                    } else {
                                        return false;
                                    }


                                }
                            }

                        }
                    });
                });
//END OF ADD YOUTH MODAL ------------------------------------------------------------------------------------------------------------------------






















                var viewModel = {};
                var youthInServices = {};

                $(".datepicker").datepicker({
                    showButtonPanel: true,
                    changeMonth: true,
                    changeYear: true,
                    showOtherMonths: true,
                    selectOtherMonths: true
                });


//YOUTH TYPEAHEAD --------------------------------------------------------------------------------------------------------------------
//This allows the user to start typing, and it will query the database and allow multiple selection of youth items.
                var youth = new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('firstName', 'lastName'),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: '/api/youths?query=%QUERY',
                        wildcard: '%QUERY'
                    }
                });

                $('#YouthId').typeahead({
                    minLength: 3,
                    highlight: true
                },
                    {
                        name: 'youthId',
                        display: "youth as youth.firstName + ' ' + youth.lastName",
                        source: youth,
                        templates: {
                            empty: ['none found'].join('\n'),
                            suggestion: function (data) {
                                return '<div><strong>' + data.firstName + ' ' + data.lastName + '</strong></div>';
                            }
                        }
                    }).on("typeahead:select",
                    function (e, youth) {
                        vm.selectedyouth.push(youth.id.toString());
                        $("#youthId").append("<li class ='list-group-item'>" +
                            youth.firstName + " " + youth.lastName + "<span id='" + youth.id + "' class='close'>X</span></li>");
                    });

                //Clears out the client when the x is clicked by getting the youth id, checking if its in the array, and removing it.  It also removes the list item.
                $("#youthId").on("click", ".close", function () {

                    var youthId = $(this).attr("id");

                    if (jQuery.inArray(youthId, vm.youth) != -1) {
                        vm.youth = jQuery.grep(vm.youth, function (value) {
                            return value != youthId;
                        });
                        $(this).parent().remove();
                    } else {
                        $(this).parent().remove();
                    }
                });

                $('#CfsWorkerId').typeahead({
                    minLength: 3,
                    highlight: true
                },
                    {
                        name: 'cfsWorkerId',
                        display: "cfsWorker as cfsWorker.firstName + ' ' + cfsWorker.lastName",
                        source: cfsWorker,
                        templates: {
                            empty: [
                                '<div>',
                                'none found',
                                '</div>'
                            ].join('\n'),
                            suggestion: function (data) {
                                return '<div><strong>' + data.firstName + ' ' + data.lastName + '</strong></div>';
                            }
                        }
                    }).on("typeahead:select",
                    function (e, cfsWorker) {
                        viewModel.cfsWorkerId = cfsWorker.id;
                        document.getElementById("selected-cfsWorker").innerHTML = cfsWorker.firstName + " " + cfsWorker.lastName;

                        //$("#clients").append("<li class ='list-group-item'>" + client.firstName + " " + client.lastName + "</li>");
                    });



                //CLIENTS TYPEAHEAD----------------------------------------------------------------------------------------------------------------
                var clients = new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('masterCaseNumber', 'firstName', 'lastName'),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: '/api/clients?query=%QUERY',
                        wildcard: '%QUERY'
                    }
                });

                $('#ClientIds').typeahead({
                    minLength: 3,
                    highlight: true
                },
                    {
                        name: 'clientId',
                        display: "client as client.firstName + ' ' + client.lastName",
                        source: clients,
                        templates: {
                            empty: [
                                '<div>',
                                'none found',
                                '</div>'
                            ].join('\n'),
                            suggestion: function (data) {
                                return '<div><strong>' + data.firstName + ' ' + data.lastName + '</strong></div>';
                            }
                        }
                    }).on("typeahead:select",
                    function (e, client) {
                        viewModel.clientId = client.id;
                        document.getElementById("selected-client").innerHTML = client.firstName + " " + client.lastName;

                        //$("#clients").append("<li class ='list-group-item'>" + client.firstName + " " + client.lastName + "</li>");
                    });
        });
    </script>

}